name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  prepare:
    name: Prepare
    uses: ./.github/workflows/prepare.yml

    permissions:
      contents: read
      pull-requests: write

  tests:
    name: Tests
    runs-on: ubuntu-latest
    needs: prepare

    env:
      DB_NAME: ${{ github.repository_owner }}
      DB_USER: ${{ github.repository_owner }}
      DB_PASS: secret

    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_DB: ${{ env.DB_NAME }}
          POSTGRES_USER: ${{ env.DB_USER }}
          POSTGRES_PASSWORD: ${{ env.DB_PASS }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd=pg_isready
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up bun
        uses: oven-sh/setup-bun@v2

      - name: Install dependencies
        run: bun ci

      - name: Test
        env:
          APP_NAME: elysia-app
          APP_VERSION: ${{ needs.prepare.outputs.image-tag }}
          AUTH_SECRET: secret
          NODE_ENV: test
        run: bun test --coverage

  build-and-push:
    name: Docker Images for ${{ matrix.service }}
    needs: [prepare, tests]
    if: needs.tests.result == 'success'
    uses: ./.github/workflows/docker.yml
    with:
      image-tag: ${{ needs.prepare.outputs.image-tag }}
      repo-name: ${{ needs.prepare.outputs.repo-name }}
      service-name: ${{ matrix.service }}

    permissions:
      contents: read
      packages: write
      id-token: write
      attestations: write

    strategy:
      fail-fast: false
      matrix:
        service: [elysia-app]

  prune-images:
    name: Prune old images
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    needs: [build-and-push]

    permissions:
      packages: write

    steps:
      - uses: quartx-analytics/ghcr-cleaner@v1
        with:
          owner-type: user
          token: ${{ secrets.PAT_PRUNE }}
          repository-owner: ${{ github.repository_owner }}
          repository-name: ${{ github.repository }}
          delete-untagged: true
          keep-at-most: 10
          skip-tags: latest,main,*.*.*-main.*
